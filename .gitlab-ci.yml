image: python:3.7.3

before_script:
  - python --version
  - pip install -r build/requirements.txt
  - mv build/env_ansible.cfg ansible.cfg
  - chmod -R go-wx $(pwd)
  - ansible-galaxy install -r build/requirements.yml -p roles -v
  - echo "redacted" > super_secret.vault_pass

stages: 
  - build
  - test
  - notify

build_enviornment:
  stage: build
  script:
    - ansible --version

ansible-lint_test:
  stage: test
  dependencies: 
    - build_enviornment
  script:
    - ansible-lint -v plays/* -x 404,401,301,205

test-roles:
  stage: test
  dependencies: 
    - build_enviornment
  script: 
    - ansible-playbook tests/test_roles.yml --connection=local --force-handlers -i tests/test_inventory

test-freshen_up:
  stage: test
  dependencies: 
    - build_enviornment
  script: 
    - ansible-playbook plays/freshen_up --connection=local -i tests/test_inventory

test-set_hostname:
  stage: test
  dependencies: 
    - build_enviornment
  script: 
    - ansible-playbook plays/set_hostname --connection=local -i tests/test_inventory --extra-vars "target=localhost NEW_HOSTNAME=unit_test"

notify_success:
  stage: notify
  before_script: 
    - echo "not executing global before_script"
  allow_failure: true
  script: 
    # ARGUEMENT ORDER MATTERS!! Check the script before adjusting 
    - ./build/notify_success.sh

notify_fail:
  stage: notify
  before_script: 
    - echo "not executing global before_script"
  allow_failure: true
  when: on_failure
  script:
    # ARGUEMENT ORDER MATTERS!! Check the script before adjusting 
    - ./build/notify_failure.sh 
