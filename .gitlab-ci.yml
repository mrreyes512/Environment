image: python:3.7.3

before_script:
  - python --version
  - pip install -r build/requirements.txt
  - mv build/env_ansible.cfg ansible.cfg
  - chmod -R go-wx $(pwd)
  - ansible-galaxy install -r build/requirements.yml -p roles -v
  - echo "redacted" > super_secret.vault_pass

stages: 
  - build
  - test
  - notify

build_enviornment:
  stage: build
  script:
    - ansible --version

test-lint:
  stage: test
  dependencies: 
    - build_enviornment
  script:
    - ansible-lint -v plays/* -x 404,401,301,205

test-roles:
  stage: test
  dependencies: 
    - build_enviornment
  script: 
    - ansible-playbook tests/test_roles.yml --connection=local --force-handlers -i tests/test_inventory

test-freshen_up:
  stage: test
  dependencies: 
    - build_enviornment
  script: 
    - env && ls -alF
    - ansible-playbook tests/test_freshen_up.yml --connection=local --force-handlers -i tests/test_inventory

notify_success:
  stage: notify
  allow_failure: true
  script: 
    # ARGUEMENT ORDER MATTERS!! Check the script before adjusting 
    - ./build/notify_success.sh "$NOTIFY_URL" "$GITLAB_USER_NAME" "$CI_PIPELINE_URL" "$CI_PIPELINE_ID"
      "$CI_PROJECT_URL" "$CI_COMMIT_REF_NAME" "$CI_BUILD_REF_NAME" "$CI_COMMIT_SHA" "$CI_COMMIT_TITLE"

notify_fail:
  stage: notify
  allow_failure: true
  when: on_failure
  script:
    # ARGUEMENT ORDER MATTERS!! Check the script before adjusting 
    - ./build/notify_failure.sh "$NOTIFY_URL" "$GITLAB_USER_NAME" "$CI_PIPELINE_URL" "$CI_PIPELINE_ID"
      "$CI_PROJECT_URL" "$CI_COMMIT_REF_NAME" "$CI_BUILD_REF_NAME" "$CI_COMMIT_SHA" "$CI_COMMIT_TITLE"
